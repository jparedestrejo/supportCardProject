
  
    
    *,
    *:before,
    *:after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }
    
    //styles to draw a basic outline of a card
    .card {
        border: 1px solid grey;
        height: $card-height;
        width: $card-width;
        border-radius: 10px;
        margin: 20px;
        box-shadow: 2px 2px 4px grey;
    }
    
    //because it is a card front we want a bit of extra padding
    .card-front {
        padding: .5em;
    }
    
    
    
    
    //set icon size
    .icon {
        width: $icon-size;
        height: $icon-size;
    }
    
    .number {
        text-align: center;
        font-size: $font-size-number;
      //an icon that is part of a number should be half the normal size
        & > .icon {
            width: $icon-size * .5;
            height: $icon-size *.5;
        }
    }
    
    //rotate bottom pips 180deg
    .rotate {
        transform: rotate(180deg);
    }
    @supports (display: grid) {
      // All of your GRID CSS code here.
      
    .row {
        display:grid;
        grid-template-columns:12.5% 25% 25% 25% 12.5%;
    grid-template-rows:repeat(7,7.7vw);
    align-items:end;
      justify-items:center;
      background-color: yellow;
    }
    .cell:nth-child(1){
      grid-column:1/2;
      grid-row:1/2;
      align-self:start;
    }
    .cell:nth-child(2){
      grid-column:2/3;
      grid-row:1/2;
      align-self:start;
    }
    .cell:nth-child(3){
      grid-column:4/5;
      grid-row:1/2;
     
        align-self:start;
    }
    .cell:nth-child(4){
      grid-column:1/6;
      grid-row:3/4;
     
    }
    .cell:nth-child(5){
      grid-column:2/3;
      grid-row:5/6;
    
    }
    .cell:nth-child(6){
      grid-column:4/5;
      grid-row:5/6;
    
    }
    .cell:nth-child(7){
      grid-column:4/5;
      grid-row:7/8;
    
    }
    .cell:nth-child(8){
      grid-column:2/3;
      grid-row:7/8;
    
    }
    .cell:nth-child(9){
      grid-column:5/6;
      grid-row:7/8;
    }
  }
  @supports not (display: grid) {
    // All of your flexbox SCSS code here.
    //make column classes
  @mixin col($span-num) {
   flex: 0 0 $one-column * $span-num;
  }
  //make offset classes
  @mixin offset($offset-num) {
   margin-left: $one-column * $offset-num;
  }
  
  .row {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
      align-content: space-between;
      height: 100%;
  }
  .cell {
      flex: 1;
      text-align: center;
  }
  //make column classes 
  @for $index from $loop-start to $loop-end {
      .col-#{$index} {
          @include col($index);
      }
  }
      
  //make offset classes
  @for $index from $loop-start to $loop-end {
      .offset-#{$index} {
          @include offset($index);
      }
  }        
  } 